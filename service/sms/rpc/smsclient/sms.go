// Code generated by goctl. DO NOT EDIT.
// Source: sms.proto

package smsclient

import (
	"context"

	"SimplePick-Mall-Server/service/sms/rpc/sms"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CouponAddReq            = sms.CouponAddReq
	CouponAddResp           = sms.CouponAddResp
	CouponDeleteReq         = sms.CouponDeleteReq
	CouponDeleteResp        = sms.CouponDeleteResp
	CouponListData          = sms.CouponListData
	CouponListReq           = sms.CouponListReq
	CouponListResp          = sms.CouponListResp
	CouponUpdateReq         = sms.CouponUpdateReq
	CouponUpdateResp        = sms.CouponUpdateResp
	HomeAdvertiseAddReq     = sms.HomeAdvertiseAddReq
	HomeAdvertiseAddResp    = sms.HomeAdvertiseAddResp
	HomeAdvertiseDeleteReq  = sms.HomeAdvertiseDeleteReq
	HomeAdvertiseDeleteResp = sms.HomeAdvertiseDeleteResp
	HomeAdvertiseListData   = sms.HomeAdvertiseListData
	HomeAdvertiseListReq    = sms.HomeAdvertiseListReq
	HomeAdvertiseListResp   = sms.HomeAdvertiseListResp
	HomeAdvertiseUpdateReq  = sms.HomeAdvertiseUpdateReq
	HomeAdvertiseUpdateResp = sms.HomeAdvertiseUpdateResp
	HotRecommendAddReq      = sms.HotRecommendAddReq
	HotRecommendAddResp     = sms.HotRecommendAddResp
	HotRecommendDeleteReq   = sms.HotRecommendDeleteReq
	HotRecommendDeleteResp  = sms.HotRecommendDeleteResp
	HotRecommendList        = sms.HotRecommendList
	HotRecommendListReq     = sms.HotRecommendListReq
	HotRecommendListResp    = sms.HotRecommendListResp
	HotRecommendUpdateReq   = sms.HotRecommendUpdateReq
	HotRecommendUpdateResp  = sms.HotRecommendUpdateResp

	Sms interface {
		// 添加广告
		HomeAdvertiseAdd(ctx context.Context, in *HomeAdvertiseAddReq, opts ...grpc.CallOption) (*HomeAdvertiseAddResp, error)
		// 广告列表
		HomeAdvertiseList(ctx context.Context, in *HomeAdvertiseListReq, opts ...grpc.CallOption) (*HomeAdvertiseListResp, error)
		// 更新广告
		HomeAdvertiseUpdate(ctx context.Context, in *HomeAdvertiseUpdateReq, opts ...grpc.CallOption) (*HomeAdvertiseUpdateResp, error)
		// 删除广告
		HomeAdvertiseDelete(ctx context.Context, in *HomeAdvertiseDeleteReq, opts ...grpc.CallOption) (*HomeAdvertiseDeleteResp, error)
		// 添加优惠券
		CouponAdd(ctx context.Context, in *CouponAddReq, opts ...grpc.CallOption) (*CouponAddResp, error)
		// 更新优惠券
		CouponUpdate(ctx context.Context, in *CouponUpdateReq, opts ...grpc.CallOption) (*CouponUpdateResp, error)
		// 删除优惠券
		CouponDelete(ctx context.Context, in *CouponDeleteReq, opts ...grpc.CallOption) (*CouponDeleteResp, error)
		// 优惠券列表
		CouponList(ctx context.Context, in *CouponListReq, opts ...grpc.CallOption) (*CouponListResp, error)
		// 添加推荐
		HotRecommendAdd(ctx context.Context, in *HotRecommendAddReq, opts ...grpc.CallOption) (*HotRecommendAddResp, error)
		// 推荐列表
		HotRecommendList(ctx context.Context, in *HotRecommendListReq, opts ...grpc.CallOption) (*HotRecommendListResp, error)
		// 更新推荐
		HotRecommendUpdate(ctx context.Context, in *HotRecommendUpdateReq, opts ...grpc.CallOption) (*HotRecommendUpdateResp, error)
		// 删除推荐
		HotRecommendDelete(ctx context.Context, in *HotRecommendDeleteReq, opts ...grpc.CallOption) (*HotRecommendDeleteResp, error)
	}

	defaultSms struct {
		cli zrpc.Client
	}
)

func NewSms(cli zrpc.Client) Sms {
	return &defaultSms{
		cli: cli,
	}
}

// 添加广告
func (m *defaultSms) HomeAdvertiseAdd(ctx context.Context, in *HomeAdvertiseAddReq, opts ...grpc.CallOption) (*HomeAdvertiseAddResp, error) {
	client := sms.NewSmsClient(m.cli.Conn())
	return client.HomeAdvertiseAdd(ctx, in, opts...)
}

// 广告列表
func (m *defaultSms) HomeAdvertiseList(ctx context.Context, in *HomeAdvertiseListReq, opts ...grpc.CallOption) (*HomeAdvertiseListResp, error) {
	client := sms.NewSmsClient(m.cli.Conn())
	return client.HomeAdvertiseList(ctx, in, opts...)
}

// 更新广告
func (m *defaultSms) HomeAdvertiseUpdate(ctx context.Context, in *HomeAdvertiseUpdateReq, opts ...grpc.CallOption) (*HomeAdvertiseUpdateResp, error) {
	client := sms.NewSmsClient(m.cli.Conn())
	return client.HomeAdvertiseUpdate(ctx, in, opts...)
}

// 删除广告
func (m *defaultSms) HomeAdvertiseDelete(ctx context.Context, in *HomeAdvertiseDeleteReq, opts ...grpc.CallOption) (*HomeAdvertiseDeleteResp, error) {
	client := sms.NewSmsClient(m.cli.Conn())
	return client.HomeAdvertiseDelete(ctx, in, opts...)
}

// 添加优惠券
func (m *defaultSms) CouponAdd(ctx context.Context, in *CouponAddReq, opts ...grpc.CallOption) (*CouponAddResp, error) {
	client := sms.NewSmsClient(m.cli.Conn())
	return client.CouponAdd(ctx, in, opts...)
}

// 更新优惠券
func (m *defaultSms) CouponUpdate(ctx context.Context, in *CouponUpdateReq, opts ...grpc.CallOption) (*CouponUpdateResp, error) {
	client := sms.NewSmsClient(m.cli.Conn())
	return client.CouponUpdate(ctx, in, opts...)
}

// 删除优惠券
func (m *defaultSms) CouponDelete(ctx context.Context, in *CouponDeleteReq, opts ...grpc.CallOption) (*CouponDeleteResp, error) {
	client := sms.NewSmsClient(m.cli.Conn())
	return client.CouponDelete(ctx, in, opts...)
}

// 优惠券列表
func (m *defaultSms) CouponList(ctx context.Context, in *CouponListReq, opts ...grpc.CallOption) (*CouponListResp, error) {
	client := sms.NewSmsClient(m.cli.Conn())
	return client.CouponList(ctx, in, opts...)
}

// 添加推荐
func (m *defaultSms) HotRecommendAdd(ctx context.Context, in *HotRecommendAddReq, opts ...grpc.CallOption) (*HotRecommendAddResp, error) {
	client := sms.NewSmsClient(m.cli.Conn())
	return client.HotRecommendAdd(ctx, in, opts...)
}

// 推荐列表
func (m *defaultSms) HotRecommendList(ctx context.Context, in *HotRecommendListReq, opts ...grpc.CallOption) (*HotRecommendListResp, error) {
	client := sms.NewSmsClient(m.cli.Conn())
	return client.HotRecommendList(ctx, in, opts...)
}

// 更新推荐
func (m *defaultSms) HotRecommendUpdate(ctx context.Context, in *HotRecommendUpdateReq, opts ...grpc.CallOption) (*HotRecommendUpdateResp, error) {
	client := sms.NewSmsClient(m.cli.Conn())
	return client.HotRecommendUpdate(ctx, in, opts...)
}

// 删除推荐
func (m *defaultSms) HotRecommendDelete(ctx context.Context, in *HotRecommendDeleteReq, opts ...grpc.CallOption) (*HotRecommendDeleteResp, error) {
	client := sms.NewSmsClient(m.cli.Conn())
	return client.HotRecommendDelete(ctx, in, opts...)
}
