// Code generated by goctl. DO NOT EDIT.
// Source: ums.proto

package umsclient

import (
	"context"

	"SimplePick-Mall-Server/service/ums/rpc/ums"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	MemberAddReq     = ums.MemberAddReq
	MemberAddResp    = ums.MemberAddResp
	MemberDeleteReq  = ums.MemberDeleteReq
	MemberDeleteResp = ums.MemberDeleteResp
	MemberInfoReq    = ums.MemberInfoReq
	MemberInfoResp   = ums.MemberInfoResp
	MemberListData   = ums.MemberListData
	MemberListReq    = ums.MemberListReq
	MemberListResp   = ums.MemberListResp
	MemberLoginReq   = ums.MemberLoginReq
	MemberLoginResp  = ums.MemberLoginResp
	MemberUpdateReq  = ums.MemberUpdateReq
	MemberUpdateResp = ums.MemberUpdateResp

	Ums interface {
		// 添加会员
		MemberAdd(ctx context.Context, in *MemberAddReq, opts ...grpc.CallOption) (*MemberAddResp, error)
		// 会员登录
		MemberLogin(ctx context.Context, in *MemberLoginReq, opts ...grpc.CallOption) (*MemberLoginResp, error)
		// 会员列表
		MemberList(ctx context.Context, in *MemberListReq, opts ...grpc.CallOption) (*MemberListResp, error)
		// 会员更新
		MemberUpdate(ctx context.Context, in *MemberUpdateReq, opts ...grpc.CallOption) (*MemberUpdateResp, error)
		// 会员删除
		MemberDelete(ctx context.Context, in *MemberDeleteReq, opts ...grpc.CallOption) (*MemberDeleteResp, error)
		// 会员详情
		MemberInfo(ctx context.Context, in *MemberInfoReq, opts ...grpc.CallOption) (*MemberInfoResp, error)
	}

	defaultUms struct {
		cli zrpc.Client
	}
)

func NewUms(cli zrpc.Client) Ums {
	return &defaultUms{
		cli: cli,
	}
}

// 添加会员
func (m *defaultUms) MemberAdd(ctx context.Context, in *MemberAddReq, opts ...grpc.CallOption) (*MemberAddResp, error) {
	client := ums.NewUmsClient(m.cli.Conn())
	return client.MemberAdd(ctx, in, opts...)
}

// 会员登录
func (m *defaultUms) MemberLogin(ctx context.Context, in *MemberLoginReq, opts ...grpc.CallOption) (*MemberLoginResp, error) {
	client := ums.NewUmsClient(m.cli.Conn())
	return client.MemberLogin(ctx, in, opts...)
}

// 会员列表
func (m *defaultUms) MemberList(ctx context.Context, in *MemberListReq, opts ...grpc.CallOption) (*MemberListResp, error) {
	client := ums.NewUmsClient(m.cli.Conn())
	return client.MemberList(ctx, in, opts...)
}

// 会员更新
func (m *defaultUms) MemberUpdate(ctx context.Context, in *MemberUpdateReq, opts ...grpc.CallOption) (*MemberUpdateResp, error) {
	client := ums.NewUmsClient(m.cli.Conn())
	return client.MemberUpdate(ctx, in, opts...)
}

// 会员删除
func (m *defaultUms) MemberDelete(ctx context.Context, in *MemberDeleteReq, opts ...grpc.CallOption) (*MemberDeleteResp, error) {
	client := ums.NewUmsClient(m.cli.Conn())
	return client.MemberDelete(ctx, in, opts...)
}

// 会员详情
func (m *defaultUms) MemberInfo(ctx context.Context, in *MemberInfoReq, opts ...grpc.CallOption) (*MemberInfoResp, error) {
	client := ums.NewUmsClient(m.cli.Conn())
	return client.MemberInfo(ctx, in, opts...)
}
