// Code generated by goctl. DO NOT EDIT.
// Source: pms.proto

package server

import (
	"context"

	"SimplePick-Mall-Server/service/pms/rpc/internal/logic"
	"SimplePick-Mall-Server/service/pms/rpc/internal/svc"
	"SimplePick-Mall-Server/service/pms/rpc/pms"
)

type PmsServer struct {
	svcCtx *svc.ServiceContext
	pms.UnimplementedPmsServer
}

func NewPmsServer(svcCtx *svc.ServiceContext) *PmsServer {
	return &PmsServer{
		svcCtx: svcCtx,
	}
}

// 添加分类
func (s *PmsServer) CategoryAdd(ctx context.Context, in *pms.CategoryAddReq) (*pms.CategoryAddResp, error) {
	l := logic.NewCategoryAddLogic(ctx, s.svcCtx)
	return l.CategoryAdd(in)
}

// 分类列表
func (s *PmsServer) CategoryList(ctx context.Context, in *pms.CategoryListReq) (*pms.CategoryListResp, error) {
	l := logic.NewCategoryListLogic(ctx, s.svcCtx)
	return l.CategoryList(in)
}

// 更新分类
func (s *PmsServer) CategoryUpdate(ctx context.Context, in *pms.CategoryUpdateReq) (*pms.CategoryUpdateResp, error) {
	l := logic.NewCategoryUpdateLogic(ctx, s.svcCtx)
	return l.CategoryUpdate(in)
}

// 删除分类
func (s *PmsServer) CategoryDelete(ctx context.Context, in *pms.CategoryDeleteReq) (*pms.CategoryDeleteResp, error) {
	l := logic.NewCategoryDeleteLogic(ctx, s.svcCtx)
	return l.CategoryDelete(in)
}

// 添加属性
func (s *PmsServer) AttributeAdd(ctx context.Context, in *pms.AttributeAddReq) (*pms.AttributeAddResp, error) {
	l := logic.NewAttributeAddLogic(ctx, s.svcCtx)
	return l.AttributeAdd(in)
}

// 属性列表
func (s *PmsServer) AttributeList(ctx context.Context, in *pms.AttributeListReq) (*pms.AttributeListResp, error) {
	l := logic.NewAttributeListLogic(ctx, s.svcCtx)
	return l.AttributeList(in)
}

// 更新属性
func (s *PmsServer) AttributeUpdate(ctx context.Context, in *pms.AttributeUpdateReq) (*pms.AttributeUpdateResp, error) {
	l := logic.NewAttributeUpdateLogic(ctx, s.svcCtx)
	return l.AttributeUpdate(in)
}

// 删除属性
func (s *PmsServer) AttributeDelete(ctx context.Context, in *pms.AttributeDeleteReq) (*pms.AttributeDeleteResp, error) {
	l := logic.NewAttributeDeleteLogic(ctx, s.svcCtx)
	return l.AttributeDelete(in)
}

// 添加商品
func (s *PmsServer) ProductAdd(ctx context.Context, in *pms.ProductAddReq) (*pms.ProductAddResp, error) {
	l := logic.NewProductAddLogic(ctx, s.svcCtx)
	return l.ProductAdd(in)
}

// 商品列表
func (s *PmsServer) ProductList(ctx context.Context, in *pms.ProductListReq) (*pms.ProductListResp, error) {
	l := logic.NewProductListLogic(ctx, s.svcCtx)
	return l.ProductList(in)
}

// 更新商品
func (s *PmsServer) ProductUpdate(ctx context.Context, in *pms.ProductUpdateReq) (*pms.ProductUpdateResp, error) {
	l := logic.NewProductUpdateLogic(ctx, s.svcCtx)
	return l.ProductUpdate(in)
}

// 删除商品
func (s *PmsServer) ProductDelete(ctx context.Context, in *pms.ProductDeleteReq) (*pms.ProductDeleteResp, error) {
	l := logic.NewProductDeleteLogic(ctx, s.svcCtx)
	return l.ProductDelete(in)
}

// 查询商品详情
func (s *PmsServer) ProductInfo(ctx context.Context, in *pms.ProductInfoReq) (*pms.ProductInfoResp, error) {
	l := logic.NewProductInfoLogic(ctx, s.svcCtx)
	return l.ProductInfo(in)
}

// 添加Sku
func (s *PmsServer) SkuAdd(ctx context.Context, in *pms.SkuAddReq) (*pms.SkuAddResp, error) {
	l := logic.NewSkuAddLogic(ctx, s.svcCtx)
	return l.SkuAdd(in)
}

// Sku列表
func (s *PmsServer) SkuList(ctx context.Context, in *pms.SkuListReq) (*pms.SkuListResp, error) {
	l := logic.NewSkuListLogic(ctx, s.svcCtx)
	return l.SkuList(in)
}

// 更新Sku
func (s *PmsServer) SkuUpdate(ctx context.Context, in *pms.SkuUpdateReq) (*pms.SkuUpdateResp, error) {
	l := logic.NewSkuUpdateLogic(ctx, s.svcCtx)
	return l.SkuUpdate(in)
}

// 删除Sku
func (s *PmsServer) SkuDelete(ctx context.Context, in *pms.SkuDeleteReq) (*pms.SkuDeleteResp, error) {
	l := logic.NewSkuDeleteLogic(ctx, s.svcCtx)
	return l.SkuDelete(in)
}

// sku详情
func (s *PmsServer) SkuInfo(ctx context.Context, in *pms.SkuInfoReq) (*pms.SkuInfoResp, error) {
	l := logic.NewSkuInfoLogic(ctx, s.svcCtx)
	return l.SkuInfo(in)
}

// 添加属性分类
func (s *PmsServer) AttributeCategoryAdd(ctx context.Context, in *pms.AttributeCategoryAddReq) (*pms.AttributeCategoryAddResp, error) {
	l := logic.NewAttributeCategoryAddLogic(ctx, s.svcCtx)
	return l.AttributeCategoryAdd(in)
}

// 更新属性分类
func (s *PmsServer) AttributeCategoryUpdate(ctx context.Context, in *pms.AttributeCategoryUpdateReq) (*pms.AttributeCategoryUpdateResp, error) {
	l := logic.NewAttributeCategoryUpdateLogic(ctx, s.svcCtx)
	return l.AttributeCategoryUpdate(in)
}

// 删除属性分类
func (s *PmsServer) AttributeCategoryDelete(ctx context.Context, in *pms.AttributeCategoryDeleteAddReq) (*pms.AttributeCategoryDeleteResp, error) {
	l := logic.NewAttributeCategoryDeleteLogic(ctx, s.svcCtx)
	return l.AttributeCategoryDelete(in)
}

// 属性分类列表
func (s *PmsServer) AttributeCategoryList(ctx context.Context, in *pms.AttributeCategoryListReq) (*pms.AttributeCategoryListResp, error) {
	l := logic.NewAttributeCategoryListLogic(ctx, s.svcCtx)
	return l.AttributeCategoryList(in)
}

// 添加商家
func (s *PmsServer) MerchantsAdd(ctx context.Context, in *pms.MerchantsAddReq) (*pms.MerchantsAddResp, error) {
	l := logic.NewMerchantsAddLogic(ctx, s.svcCtx)
	return l.MerchantsAdd(in)
}

// 商家列表
func (s *PmsServer) MerchantsList(ctx context.Context, in *pms.MerchantsListReq) (*pms.MerchantsListResp, error) {
	l := logic.NewMerchantsListLogic(ctx, s.svcCtx)
	return l.MerchantsList(in)
}

// 更新商家
func (s *PmsServer) MerchantsUpdate(ctx context.Context, in *pms.MerchantsUpdateReq) (*pms.MerchantsUpdateResp, error) {
	l := logic.NewMerchantsUpdateLogic(ctx, s.svcCtx)
	return l.MerchantsUpdate(in)
}

// 删除商家
func (s *PmsServer) MerchantsDelete(ctx context.Context, in *pms.MerchantsDeleteReq) (*pms.MerchantsDeleteResp, error) {
	l := logic.NewMerchantsDeleteLogic(ctx, s.svcCtx)
	return l.MerchantsDelete(in)
}

// 商家详情
func (s *PmsServer) MerchantsInfo(ctx context.Context, in *pms.MerchantsInfoReq) (*pms.MerchantsInfoResp, error) {
	l := logic.NewMerchantsInfoLogic(ctx, s.svcCtx)
	return l.MerchantsInfo(in)
}

// 添加商家申请
func (s *PmsServer) MerchantsApplyAdd(ctx context.Context, in *pms.MerchantsApplyAddReq) (*pms.MerchantsApplyAddResp, error) {
	l := logic.NewMerchantsApplyAddLogic(ctx, s.svcCtx)
	return l.MerchantsApplyAdd(in)
}

// 商家申请列表
func (s *PmsServer) MerchantsApplyList(ctx context.Context, in *pms.MerchantsApplyListReq) (*pms.MerchantsApplyListResp, error) {
	l := logic.NewMerchantsApplyListLogic(ctx, s.svcCtx)
	return l.MerchantsApplyList(in)
}

// 更新商家申请
func (s *PmsServer) MerchantsApplyUpdate(ctx context.Context, in *pms.MerchantsApplyUpdateReq) (*pms.MerchantsApplyUpdateResp, error) {
	l := logic.NewMerchantsApplyUpdateLogic(ctx, s.svcCtx)
	return l.MerchantsApplyUpdate(in)
}

// 删除商家申请
func (s *PmsServer) MerchantsApplyDelete(ctx context.Context, in *pms.MerchantsApplyDeleteReq) (*pms.MerchantsApplyDeleteResp, error) {
	l := logic.NewMerchantsApplyDeleteLogic(ctx, s.svcCtx)
	return l.MerchantsApplyDelete(in)
}
