// Code generated by goctl. DO NOT EDIT.
// Source: oms.proto

package omsclient

import (
	"context"

	"SimplePick-Mall-Server/service/oms/rpc/oms"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	OrderAddReq     = oms.OrderAddReq
	OrderAddResp    = oms.OrderAddResp
	OrderDeleteReq  = oms.OrderDeleteReq
	OrderDeleteResp = oms.OrderDeleteResp
	OrderInfoReq    = oms.OrderInfoReq
	OrderInfoResp   = oms.OrderInfoResp
	OrderListData   = oms.OrderListData
	OrderListReq    = oms.OrderListReq
	OrderListResp   = oms.OrderListResp
	OrderUpdateReq  = oms.OrderUpdateReq
	OrderUpdateResp = oms.OrderUpdateResp

	Oms interface {
		// 添加订单
		OrderAdd(ctx context.Context, in *OrderAddReq, opts ...grpc.CallOption) (*OrderAddResp, error)
		// 订单列表
		OrderList(ctx context.Context, in *OrderListReq, opts ...grpc.CallOption) (*OrderListResp, error)
		// 更新订单
		OrderUpdate(ctx context.Context, in *OrderUpdateReq, opts ...grpc.CallOption) (*OrderUpdateResp, error)
		// 删除订单
		OrderDelete(ctx context.Context, in *OrderDeleteReq, opts ...grpc.CallOption) (*OrderDeleteResp, error)
		// 订单详情
		OrderInfo(ctx context.Context, in *OrderInfoReq, opts ...grpc.CallOption) (*OrderInfoResp, error)
	}

	defaultOms struct {
		cli zrpc.Client
	}
)

func NewOms(cli zrpc.Client) Oms {
	return &defaultOms{
		cli: cli,
	}
}

// 添加订单
func (m *defaultOms) OrderAdd(ctx context.Context, in *OrderAddReq, opts ...grpc.CallOption) (*OrderAddResp, error) {
	client := oms.NewOmsClient(m.cli.Conn())
	return client.OrderAdd(ctx, in, opts...)
}

// 订单列表
func (m *defaultOms) OrderList(ctx context.Context, in *OrderListReq, opts ...grpc.CallOption) (*OrderListResp, error) {
	client := oms.NewOmsClient(m.cli.Conn())
	return client.OrderList(ctx, in, opts...)
}

// 更新订单
func (m *defaultOms) OrderUpdate(ctx context.Context, in *OrderUpdateReq, opts ...grpc.CallOption) (*OrderUpdateResp, error) {
	client := oms.NewOmsClient(m.cli.Conn())
	return client.OrderUpdate(ctx, in, opts...)
}

// 删除订单
func (m *defaultOms) OrderDelete(ctx context.Context, in *OrderDeleteReq, opts ...grpc.CallOption) (*OrderDeleteResp, error) {
	client := oms.NewOmsClient(m.cli.Conn())
	return client.OrderDelete(ctx, in, opts...)
}

// 订单详情
func (m *defaultOms) OrderInfo(ctx context.Context, in *OrderInfoReq, opts ...grpc.CallOption) (*OrderInfoResp, error) {
	client := oms.NewOmsClient(m.cli.Conn())
	return client.OrderInfo(ctx, in, opts...)
}
