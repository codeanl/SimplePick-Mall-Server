// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	auth "SimplePick-Mall-Server/front-api/internal/handler/auth"
	cart "SimplePick-Mall-Server/front-api/internal/handler/cart"
	index "SimplePick-Mall-Server/front-api/internal/handler/index"
	order "SimplePick-Mall-Server/front-api/internal/handler/order"
	"SimplePick-Mall-Server/front-api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: auth.MemberAddHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/info",
				Handler: auth.InfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/update",
				Handler: auth.MemberUpdateHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/auth"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/homeAdvertiseList",
				Handler: index.HomeAdvertiseListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/categoryList",
				Handler: index.CategoryListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/productList",
				Handler: index.ProductListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/subjectList",
				Handler: index.SubjectListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/subjectProductList",
				Handler: index.SubjectProductListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/productInfo",
				Handler: index.ProductInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/placeList",
				Handler: index.PlaceListHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/index"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/add",
				Handler: cart.CartAddHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/update",
				Handler: cart.CartUpdateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/delete",
				Handler: cart.CartDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/list",
				Handler: cart.CartListHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/cart"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/add",
				Handler: order.OrderAddHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/list",
				Handler: order.OrderListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/update",
				Handler: order.OrderUpdateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/delete",
				Handler: order.OrderDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/info",
				Handler: order.OrderInfoHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/order"),
	)
}
