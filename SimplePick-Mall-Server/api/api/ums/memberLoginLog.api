info(
    desc: "会员信息"
    author: "koobe"
    email: "1002219331@qq.com"
)

type (
    AddMemberLoginLogReq struct {
            UserID int64 `json:"userId,optional"`
            IP string `json:"ip,optional"`
        }
        AddMemberLoginLogResp struct {
            Code int64 `json:"code"`
            Message string `json:"message"`
        }
    ListMemberLoginLogReq struct {
        Current int64 `form:"current,default=1"`
        PageSize int64 `form:"pageSize,default=20"`
        UserID int64 `form:"userId"`
    }
    ListMemberLoginLogData struct {
        Id int64 `json:"id"`
        UserID int64 `json:"userId,optional"`
        IP string `json:"ip,optional"`
        CreateTime string `json:"createTime,optional"`
    }
    ListMemberLoginLogResp struct {
        Code int64 `json:"code"`
        Message string `json:"message"`
        Data []*ListMemberLoginLogData `json:"data"`
        Total int64 `json:"total"`
    }
    DeleteMemberLoginLogReq struct {
        Ids []int64 `json:"ids"`
    }
    DeleteMemberLoginLogResp struct {
        Code int64 `json:"code"`
        Message string `json:"message"`
    }
)

@server(
    jwt: Auth
    group: ums/MemberLoginLog
    prefix: /api/ums/MemberLoginLog
)
service api {
 @handler MemberLoginLogAdd
    post /add (AddMemberLoginLogReq) returns (AddMemberLoginLogResp)
    @handler MemberLoginLogList
    get  /list (ListMemberLoginLogReq) returns (ListMemberLoginLogResp)
    @handler MemberLoginLogDelete
    post /delete (DeleteMemberLoginLogReq) returns (DeleteMemberLoginLogResp)
}
