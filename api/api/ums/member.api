info(
    desc: "会员信息"
    author: "koobe"
    email: "1002219331@qq.com"
)

type (
    AddMemberReq struct {
             Id int64 `json:"id"`
            Username string `json:"username,optional"`                           // 用户名
            Password string `json:"password,optional"`                           // 密码
            Nickname string `json:"nickname,optional"`                           // 昵称
            Phone string `json:"phone,optional"`                                 // 手机号码
            Status string `json:"status,optional"`                                // 帐号启用状态:0->禁用；1->启用
            Avatar string `json:"avatar,optional"`                               // 头像
            Gender string `json:"gender,optional"`                                // 性别：0->未知；1->男；2->女
            Email string `json:"email,optional"`                                  //
            City string `json:"city,optional"`                                    // 所做城市
            Job string `json:"job,optional"`                                      // 职业
            Signature string `json:"signature,optional"` // 个性签名                              // 手机号码
        }
        AddMemberResp struct {
            Code int64 `json:"code"`
            Message string `json:"message"`
        }
    ListMemberReq struct {
        Current int64 `form:"current,default=1"`
        PageSize int64 `form:"pageSize,default=20"`
        Username string `form:"username,optional"`                               // 用户名
        Phone string `form:"phone,optional"`                                     // 手机号码
        Status string `form:"status,optional"`                                    // 帐号启用状态:0->禁用；1->启用
    }
    ListMemberData struct {
        Id int64 `json:"id"`
        Username string `json:"username"`                           // 用户名
        Password string `json:"password"`                           // 密码
        Nickname string `json:"nickname"`                           // 昵称
        Phone string `json:"phone"`                                 // 手机号码
        Status string `json:"status"`                                // 帐号启用状态:0->禁用；1->启用
        Avatar string `json:"avatar"`                               // 头像
        Gender string `json:"gender"`                                // 性别：0->未知；1->男；2->女
        Email string `json:"email"`                                  //
        City string `json:"city"`                                    // 所做城市
        Job string `json:"job"`                                      // 职业
        Signature string `json:"signature"` // 个性签名
         CreatTIme string `json:"creatTIme"`                                  //
    }
    ListMemberResp struct {
        Code int64 `json:"code"`
        Message string `json:"message"`
        Data []*ListMemberData `json:"data"`
        Total int64 `json:"total"`
    }
    UpdateMemberReq struct {
        Id int64 `json:"id"`
        Username string `json:"username,optional"`                           // 用户名
        Password string `json:"password,optional"`                           // 密码
        Nickname string `json:"nickname,optional"`                           // 昵称
        Phone string `json:"phone,optional"`                                 // 手机号码
        Status string `json:"status,optional"`                                // 帐号启用状态:0->禁用；1->启用
        Avatar string `json:"avatar,optional"`                               // 头像
        Gender string `json:"gender,optional"`                                // 性别：0->未知；1->男；2->女
        Email string `json:"email,optional"`                                  //
        City string `json:"city,optional"`                                    // 所做城市
        Job string `json:"job,optional"`                                      // 职业
        Signature string `json:"signature,optional"` // 个性签名
    }
    UpdateMemberResp struct {
        Code int64 `json:"code"`
        Message string `json:"message"`
    }
    DeleteMemberReq struct {
        Ids []int64 `json:"ids"`
    }
    DeleteMemberResp struct {
        Code int64 `json:"code"`
        Message string `json:"message"`
    }
)

@server(
    jwt: Auth
    group: ums/member
    prefix: /api/ums/member
)
service api {
 @handler MemberAdd
    post /add (AddMemberReq) returns (AddMemberResp)
    @handler MemberList
    get  /list (ListMemberReq) returns (ListMemberResp)
    @handler MemberUpdate
    post /update (UpdateMemberReq) returns (UpdateMemberResp)
    @handler MemberDelete
    post /delete (DeleteMemberReq) returns (DeleteMemberResp)
}
