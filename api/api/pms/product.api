info(
    desc: "商品信息"
    author: "koobe"
    email: "1002219331@qq.com"
)

type (
    addProductReq struct {
        CategoryID int64 `json:"categoryId"`
        Name string `json:"name"`
        Pic string `json:"pic,optional"`
        ProductSn string `json:"productSn"`
        Desc string `json:"desc,optional"`
        OriginalPrice float64 `json:"originalPrice"`
        Unit string `json:"unit,optional"`
        Price float64 `json:"price,optional,default=0"`
        AttributeValueID []int64 `json:"attributeValueID,optional"`
        Size []Size `json:"size"`
        ImgUrl []string `json:"imgUrl"`
    }
    Size struct{
        ID int64 `json:"id,optional"`
        Name string `json:"name"`
        ProductID int64 `json:"productId,optional"`
        SizeValue []string `json:"sizeValue"`
    }

    addProductResp struct {
        Code int64 `json:"code"`
        Message string `json:"message"`
    }
    ListProductReq struct {
        Current int64 `form:"current,optional"`
        PageSize int64 `form:"pageSize,optional"`
        Name   string `form:"name,optional"`
        CategoryId int64  `form:"categoryId,optional"`
    }
    ListProductData struct {
        Id int64 `json:"id"`
        CategoryID int64 `json:"categoryId"`
         Name string `json:"name"`
         Pic string `json:"pic,optional"`
         ProductSn string `json:"productSn"`
         Desc string `json:"desc,optional"`
        OriginalPrice float64 `json:"originalPrice,optional"`
         Unit string `json:"unit,optional"`
          Price float64 `json:"price,optional"`
    }

    ListProductResp struct {
        Code int64 `json:"code"`
        Message string `json:"message"`
        Data []ListProductData `json:"data"`
        Total int64 `json:"total"`
    }
    UpdateProductReq struct {
       Id int64 `json:"id"`
       CategoryID int64 `json:"categoryId"`
       Name string `json:"name"`
       Pic string `json:"pic,optional"`
       ProductSn string `json:"productSn"`
       Desc string `json:"desc,optional"`
       OriginalPrice float64 `json:"originalPrice,optional"`
       Unit string `json:"unit,optional"`
       Price float64 `json:"price,optional"`
      AttributeValueID []int64 `json:"attributeValueID,optional"`
      Size []Size `json:"size"`
      ImgUrl []string `json:"imgUrl"`
    }
    UpdateProductResp struct {
        Code int64 `json:"code"`
        Message string `json:"message"`
    }
    DeleteProductReq struct {
        Ids []int64 `json:"ids"`
    }
    DeleteProductResp struct {
        Code int64 `json:"code"`
        Message string `json:"message"`
    }

    ProductInfoReq struct {
        ID int64 `json:"id"`
    }
     InfoData struct {
        ProductInfo ListProductData  `json:"productInfo"`
        SkuList []SkuList `json:"skuList"`
        SizeList []SizeList `json:"sizeList"`
        AttributeValue []string `json:"attributeValue"`
        ImgUrl []string `json:"imgUrl"`
    }
    ProductInfoResp struct {
        Code int64 `json:"code"`
        Message string `json:"message"`
        Data InfoData `json:"data"`
    }
     SkuList struct{
          ID int64 `json:"id"`
          ProductID int64 `json:"productId"`
          Name string `json:"name"`
          Pic string `json:"pic"`
          SkuSn string `json:"skuSn"`
          Description string `json:"description"`
          Price float64 `json:"price"`
          Stock int64 `json:"stock"`
          Tag string `json:"tag"`
     }
      SizeList struct{
             ID int64 `json:"id,optional"`
             Name string `json:"name"`
             ProductID int64 `json:"productId,optional"`
             SizeValue []SizeValue `json:"sizeValue"`
         }
       SizeValue struct{
             ID int64 `json:"id,optional"`
             SizeID int64  `json:"sizeID,optional"`
             Name string `json:"name"`
      }
)

@server(
    jwt: Auth
    group: pms/product
    prefix: /api/pms/product
)
service api {
    @handler ProductAdd
    post /add (addProductReq) returns (addProductResp)

    @handler ProductList
    get /list (ListProductReq) returns (ListProductResp)

    @handler ProductUpdate
    post /update (UpdateProductReq) returns (UpdateProductResp)

    @handler ProductDelete
    post /delete (DeleteProductReq) returns (DeleteProductResp)

    @handler ProductInfo
    post /info (ProductInfoReq) returns (ProductInfoResp)


}
