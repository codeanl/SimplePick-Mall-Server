info(
    desc: "商品信息"
    author: "koobe"
    email: "1002219331@qq.com"
)

type (
    addProductReq struct {
        CategoryID int64 `json:"categoryId"`
        Name string `json:"name"`
        Pic string `json:"pic,optional"`
        ProductSn string `json:"productSn"`
        SubTitle string `json:"subTitle,optional"`
        Description string `json:"description,optional"`
        OriginalPrice float64 `json:"originalPrice"`
        Stock int64 `json:"stock,optional"`
        Unit string `json:"unit,optional"`
        Sale int64 `json:"sale,optional"`
        Price float64 `json:"price,optional,default=0"`
        AttributeValueID []int64 `json:"attributeValueID,optional"`
        Size []Size `json:"size"`
    }
    Size struct{
        ID int64 `json:"id,optional"`
        Name string `json:"name"`
        ProductID int64 `json:"productId,optional"`
        SizeValue []SizeValue `json:"sizeValue"`
    }
    SizeValue struct{
        SizeID int64  `json:"sizeID,optional"`
        Value string `json:"name"`
    }
    addProductResp struct {
        Code int64 `json:"code"`
        Message string `json:"message"`
    }
    ListProductReq struct {
        Current int64 `form:"current,optional"`
        PageSize int64 `form:"pageSize,optional"`
        ID int64 `form:"id,optional"`
    }
    ListProductData struct {
        Id int64 `json:"id"`
        CategoryID int64 `json:"categoryId"`
         Name string `json:"name"`
         Pic string `json:"pic,optional"`
         ProductSn string `json:"productSn"`
         SubTitle string `json:"subTitle,optional"`
         Description string `json:"description,optional"`
        OriginalPrice float64 `json:"originalPrice,optional"`
        Stock int64 `json:"stock,optional"`
         Unit string `json:"unit,optional"`
         Sale int64 `json:"sale,optional,default=0"`
          Price float64 `json:"price,optional"`
         SizeList []SizeList `json:"sizeList,optional"`
          AttrValueIDs []int64 `json:"attrValueIds"`
    }
    SizeList struct{
      ID int64 `json:"id"`
      ProductID int64 `json:"productId"`
      Name string `json:"name"`
      SizeValueList []SizeValueList `json:"sizeValueList"`
    }
    SizeValueList struct{
          ID int64 `json:"id"`
          SizeID int64 `json:"sizeId"`
          Value string `json:"name"`
      }
    ListProductResp struct {
        Code int64 `json:"code"`
        Message string `json:"message"`
        Data []ListProductData `json:"data"`
        Total int64 `json:"total"`
    }
    UpdateProductReq struct {
       Id int64 `json:"id"`
        CategoryID int64 `json:"categoryId"`
         Name string `json:"name"`
       Pic string `json:"pic,optional"`
         ProductSn string `json:"productSn"`
       SubTitle string `json:"subTitle,optional"`
       Description string `json:"description,optional"`
       OriginalPrice float64 `json:"originalPrice,optional"`
       Stock int64 `json:"stock,optional"`
       Unit string `json:"unit,optional"`
       Sale int64 `json:"sale,optional,default=0"`
       Price float64 `json:"price,optional"`
        AttributeValueID []int64 `json:"attributeValueID,optional"`
        Size []Size `json:"size"`
    }
    UpdateProductResp struct {
        Code int64 `json:"code"`
        Message string `json:"message"`
    }
    DeleteProductReq struct {
        Ids []int64 `json:"ids"`
    }
    DeleteProductResp struct {
        Code int64 `json:"code"`
        Message string `json:"message"`
    }
)

@server(
    jwt: Auth
    group: pms/product
    prefix: /api/pms/product
)
service api {
    @handler ProductAdd
    post /add (addProductReq) returns (addProductResp)

    @handler ProductList
    get /list (ListProductReq) returns (ListProductResp)

    @handler ProductUpdate
    post /update (UpdateProductReq) returns (UpdateProductResp)

    @handler ProductDelete
    post /delete (DeleteProductReq) returns (DeleteProductResp)
}
